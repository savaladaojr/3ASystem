@inject IJSRuntime JSRuntime

<div class="modal fade" id="@ModalId" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@Title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Body
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" @onclick="OnConfirm">Save changes</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string ModalId { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public RenderFragment Body { get; set; }

    [Parameter]
    public EventCallback OnConfirm { get; set; }

    public void Show()
    {
        JSRuntime.InvokeVoidAsync("bootstrap.Modal.getOrCreateInstance", $"#{ModalId}").AsTask().Wait();
        JSRuntime.InvokeVoidAsync("bootstrap.Modal.show", $"#{ModalId}");
    }

    public void Hide()
    {
        JSRuntime.InvokeVoidAsync("bootstrap.Modal.hide", $"#{ModalId}");
    }
}