@* @page "/Modules/Create" *@
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@if (updateFunctionality == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<EditForm EditContext="@_editContext">
		@* Model="createModule" *@
		@*     <DataAnnotationsValidator />
    <ValidationSummary /> *@
		<MudGrid>
			<MudItem md="12">
				<MudPaper Class="pa-4 pb-8 " Outlined="true">
					<MudGrid>
						<MudItem md="12" Style="width:100%">
							<MudSelect T="Guid"
									   @bind-Value="updateFunctionality.ApplicationId"
									   For="@(() => updateFunctionality.ApplicationId)"
									   Label="Application"
									   Placeholder="Please Select an Application"
									   Dense="true"
									   Modal="true"
									   ReadOnly="true"
									   SelectedValuesChanged="() => LoadApplicationModules(updateFunctionality.ApplicationId)">

								<MudSelectItem Value="Guid.Empty">&nbsp;</MudSelectItem>
								@foreach (var application in ListOfApplications.OrderBy(s => s.Name))
								{
									<MudSelectItem Value="@application.Id">@application.Name</MudSelectItem>
								}
							</MudSelect>
						</MudItem>

						<MudItem md="12" Style="width:100%">
							<MudSelect T="Guid"
									   @bind-Value="updateFunctionality.ModuleId"
									   For="@(() => updateFunctionality.ModuleId)"
									   Label="Module"
									   Placeholder="Please Select a Module"
									   Dense="true"
									   Modal="true"
									   ReadOnly="true"
									   SelectedValuesChanged="() => ClearValidationMessage(nameof(updateFunctionality.ModuleId))">

								<MudSelectItem Value="Guid.Empty">&nbsp;</MudSelectItem>
								@foreach (var module in ListOfModules.OrderBy(s => s.Name))
								{
									<MudSelectItem Value="@module.Id">@module.Name</MudSelectItem>
								}
							</MudSelect>
						</MudItem>

						<MudItem md="12" Style="width:100%">
							<MudTextField Label="Name"
										  Variant="Variant.Text"
										  InputType="InputType.Text"
										  For="@(() => updateFunctionality.Name)"
										  @bind-Value="updateFunctionality.Name"
										  TextChanged="() => ClearValidationMessage(nameof(updateFunctionality.Name))" />
						</MudItem>

						<MudItem md="12" Style="width:100%">
							<MudTextField Label="Route"
										  Variant="Variant.Text"
										  InputType="InputType.Text"
										  For="@(() => updateFunctionality.Route)"
										  @bind-Value="updateFunctionality.Route"
										  TextChanged="() => ClearValidationMessage(nameof(updateFunctionality.Route))" />
						</MudItem>

						<MudItem md="6" Style="width:100%">
							<MudTextField Label="Abbreviation"
										  Variant="Variant.Text"
										  InputType="InputType.Text"
										  For="@(() => updateFunctionality.Abbreviation)"
										  @bind-Value="updateFunctionality.Abbreviation"
										  TextChanged="() => ClearValidationMessage(nameof(updateFunctionality.Abbreviation))" />
						</MudItem>
						<MudItem md="6" Style="width:100%">
							<MudTextField Label="Friendly Id"
										  Variant="Variant.Text"
										  InputType="InputType.Text"
										  For="@(() => updateFunctionality.FriendlyId)"
										  @bind-Value="updateFunctionality.FriendlyId"
										  TextChanged="() => ClearValidationMessage(nameof(updateFunctionality.FriendlyId))" />
						</MudItem>

						<MudItem md="12" Style="width:100%">
							<MudTextField Label="Icon Url"
										  Variant="Variant.Text"
										  InputType="InputType.Url"
										  For="@(() => updateFunctionality.IconUrl)"
										  @bind-Value="updateFunctionality.IconUrl"
										  TextChanged="() => ClearValidationMessage(nameof(updateFunctionality.IconUrl))" />
						</MudItem>


						<MudItem md="6" Style="width:100%">
							<MudSwitch Label="Is Part of Menu"
									   Color="Color.Info"
									   UncheckedColor="Color.Warning"
									   @bind-Value="updateFunctionality.IsPartOfMenu" />
						</MudItem>

						<MudItem md="6" Style="width:100%">
							<MudSwitch Label="Is Active"
									   Disabled="true"
									   Color="Color.Info"
									   UncheckedColor="Color.Warning"
									   @bind-Value="updateFunctionality.IsActive" />
						</MudItem>

					</MudGrid>
				</MudPaper>
			</MudItem>
			<MudItem md="12" Style="text-align:right">

				<MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="HandleCancelAsync">Cancel</MudButton>

				<MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleSubmitAsync">Save</MudButton>

			</MudItem>


			@if (!string.IsNullOrEmpty(_error))
			{
				<MudItem md="12">
					<div class="alert alert-danger alert-dismissible fade show mt-2 mb-0" role="alert">
						<strong>Hey, an error happened!</strong>
						@_error
						<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
					</div>
				</MudItem>
			}


		</MudGrid>

	</EditForm>
}