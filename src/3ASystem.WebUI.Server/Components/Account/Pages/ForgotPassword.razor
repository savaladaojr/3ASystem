@page "/Account/ForgotPassword"
@layout Layout.BlankLayout
@rendermode @(new InteractiveServerRenderMode(prerender: true))

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using _3ASystem.WebUI.Server.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Forgot your password?</PageTitle>


<MudContainer Class="mt-0">
	<MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">Forgot your password?</MudText>
	<MudText Typo="Typo.body1" Align="Align.Center" GutterBottom="true">Type your e-mail to recover your password.</MudText>


	<MudGrid Class="mt-0" Justify="Justify.Center">
		<MudItem md="6" Style="">

			<EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
				<DataAnnotationsValidator />


				<MudGrid>
					<MudItem md="12">
						<MudStaticTextField @bind-Value="Input.Email" For="@(() => Input.Email)"
											Label="Email" Placeholder="name@example.com"
											UserAttributes="@(new() { { "autocomplete", "username" }, { "aria-required", "true" } })" />
					</MudItem>


					<MudItem md="6">
						<MudStaticButton Disabled="@_processing" 
							Variant="Variant.Filled"
							Color="Color.Primary" 
							FullWidth="true" 
							FormAction="FormAction.Submit">

							@if (_processing)
							{
								<MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
								<MudText Class="ms-2">Processing</MudText>
							}
							else
							{
								<MudText>Reset password</MudText>
							}
							
						</MudStaticButton>
					</MudItem>
					<MudItem md="6">
						<MudButton FullWidth="true" OnClick="ReturningToLoginPage" Variant="Variant.Filled" Color="Color.Secondary">
								<MudText>Back To Login</MudText>
						</MudButton>
					</MudItem>

				</MudGrid>
			</EditForm>


		</MudItem>

	</MudGrid>
</MudContainer>



@code {
	[SupplyParameterFromForm]
	private InputModel Input { get; set; } = new();

	private bool _processing = false;

	private async Task OnValidSubmitAsync()
	{
		_processing = true;
		var user = await UserManager.FindByEmailAsync(Input.Email);
		if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
		{
			// Don't reveal that the user does not exist or is not confirmed
			_processing = false;
			RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
		}

		// For more information on how to enable account confirmation and password reset please
		// visit https://go.microsoft.com/fwlink/?LinkID=532713
		var code = await UserManager.GeneratePasswordResetTokenAsync(user);
		code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));

		var callbackUrl = NavigationManager.GetUriWithQueryParameters(
			NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
			new Dictionary<string, object?> { ["code"] = code });

		await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));
		_processing = false;
		RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
	}

	async Task ReturningToLoginPage()
	{
		NavigationManager.NavigateTo(NavigationManager.ToAbsoluteUri("Account/Login").AbsoluteUri);
	}

	private sealed class InputModel
	{
		[Required]
		[EmailAddress]
		public string Email { get; set; } = "";
	}
}
