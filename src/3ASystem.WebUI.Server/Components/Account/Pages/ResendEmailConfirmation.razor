@page "/Account/ResendEmailConfirmation"
@layout Layout.BlankLayout

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using _3ASystem.WebUI.Server.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Resend email confirmation</PageTitle>

<MudContainer Class="mt-0">
	<MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">Resend email confirmation</MudText>
	<MudText Typo="Typo.body1" Align="Align.Center" GutterBottom="true">Enter your email.</MudText>

	<MudGrid Class="mt-0" Justify="Justify.Center">
		<MudItem md="6" Style="">

			<StatusMessage Message="@message" />

			<EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post">
				<DataAnnotationsValidator />

				<MudGrid>
					<MudItem md="12">
						<MudStaticTextField For="@(() => Input.Email)" @bind-Value="Input.Email"
											Label="Email" Placeholder="name@example.com"
											UserAttributes="@(new() { { "autocomplete", "username" }, { "aria-required", "true" } })" />
					</MudItem>
					<MudItem md="6">
						<MudStaticButton Disabled="@_processing"
										 Variant="Variant.Filled"
										 Color="Color.Primary"
										 FullWidth="true"
										 FormAction="FormAction.Submit">

							@if (_processing)
							{
								<MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
								<MudText Class="ms-2">Processing</MudText>
							}
							else
							{
								<MudText>Resend</MudText>
							}
						</MudStaticButton>
					</MudItem>
					<MudItem md="6">
						<MudButton FullWidth="true"
								   Variant="Variant.Filled"
								   Color="Color.Secondary"
								   @onclick="() => ReturningToLoginPage()">

							<MudText>Back To Login</MudText>
						</MudButton>
					</MudItem>
				</MudGrid>
			</EditForm>
		</MudItem>
	</MudGrid>
</MudContainer>

@code {
	private string? message;
	private bool _processing = false;

	[SupplyParameterFromForm]
	private InputModel Input { get; set; } = new();

	private async Task OnValidSubmitAsync()
	{
		_processing = true;
		var user = await UserManager.FindByEmailAsync(Input.Email!);
		if (user is null)
		{
			message = "Verification email sent. Please check your email.";
			_processing = false;
			return;
		}

		var userId = await UserManager.GetUserIdAsync(user);
		var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
		code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));

		var callbackUrl = NavigationManager.GetUriWithQueryParameters(
			NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
			new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code });

		await EmailSender.SendConfirmationLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

		message = "Verification email sent. Please check your email.";
		_processing = false;
	}

	private void ReturningToLoginPage()
	{
		RedirectManager.RedirectTo("Account/Login");
	}

	private sealed class InputModel
	{
		[Required]
		[EmailAddress]
		public string Email { get; set; } = "";
	}
}
